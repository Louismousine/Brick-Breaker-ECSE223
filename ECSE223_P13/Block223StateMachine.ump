class GameOccurence {

gameState {
   
    Idle {
      startGame() [hasEnoughBlockAssignments()] / { 
      	getCurrentLevelBlocks();
      	save();
      } -> Paused;
      startGame() [!hasEnoughBlockAssignments()] / { 
      	getCurrentLevelBlocks();
      	placeRandomBlocks();
      	save();
      } -> Paused;
    }
    
    Paused { 
      spaceBarHit() -> Play;
    }
    
    Play {
      spaceBarHit() / { 
      	save();
      } -> Paused;
      
      move() [isBlockHit() && isLastBlockHit()] / { 
        deleteBlock();
        incrementLevel();
        getCurrentLevelBlocks();
        if(!hasEnoughBlockAssignments()){
        placeRandomBlocks();
        }
        save();
      } -> Paused;
      
      move() [isOutOfBounds() && hasRemainingLives()] / { 
      	decrementLifeCount();
      	resetBallPosition();
      	save();
      } -> Paused;
      
      move() [isLastBlockHit() && isLastLevel() ] / {
      	createScore();
      	deleteCurrentGame();
      	save();
      } -> Done;
      
      move() [isOutOfBounds() && !hasRemainingLives()] / { 
      	createScore();
      	deleteCurrentGame();
      	save();
      } -> Done;
      
      move() [isBlockHit() && !isLastBlockHit()] / {
      	deleteBlock();
      	changeBallDirection();
      } -> Play;
      
      move() [isWallHit() || isPaddleHit()] / { 
      	changeBallDirection();
      } -> Play;
  
      move() [!(isBlockHit() && isWallHit() && isPaddleHit() && isOutOfBounds())] -> Play;
    }
    
    Done {}

}

private boolean isBlockHit() {}
private boolean isLastBlockHit() {}
private boolean isLastLevel() {}
private boolean isPaddleHit() {}
private boolean isWallHit() {}
private boolean isOutOfBounds() {}
private boolean hasEnoughBlockAssignments() {}
private boolean hasRemainingLives() {}
private void deleteBlock(){}
private void deleteCurrentGame(){}
private void createScore(){}
private void save(){}
private void getCurrentLevelBlocks(){}
private void placeRandomBlocks(){}
private void incrementLevel(){}
private void decrementLifeCount(){}
private void resetBallPosition(){}
private void changeBallDirection(){}
}

